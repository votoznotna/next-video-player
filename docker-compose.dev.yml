services:
  postgres:
    image: postgres:15-alpine
    container_name: insider-threat-db-dev
    environment:
      POSTGRES_DB: insider_threat
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - insider-threat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend-fastapi
      dockerfile: Dockerfile.dev
    container_name: insider-threat-backend-dev
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:password@postgres:5432/insider_threat
      ENVIRONMENT: development
      CORS_ORIGINS: http://localhost:3000
    ports:
      - "8000:8000"
    volumes:
      - ./backend-fastapi:/app
      - ./videos:/app/videos
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - insider-threat-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: insider-threat-frontend-dev
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000/graphql
      NEXT_PUBLIC_VIDEO_URL: http://localhost:8000
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - insider-threat-network
    command: npm run dev

volumes:
  postgres_data_dev:

networks:
  insider-threat-network:
    driver: bridge
